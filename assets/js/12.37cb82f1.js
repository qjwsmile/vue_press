(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{554:function(t,a,s){"use strict";s.r(a);var e=s(9),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"盒子模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[t._v("#")]),t._v(" 盒子模型")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v(" (1）有两种盒子模型：IE盒模型（border-box）、W3C标准盒模型（content-box）\n（2）盒模型：分为内容（content）、填充（padding）、边界（margin）、边框（border）四个部分\n\n（1）W3C标准盒模型：属性width，height只包含内容content，不包含border和padding\n（2）IE盒模型：属性width，height包含content、border和padding，指的是content+padding+border。\n\n")])])]),s("h2",{attrs:{id:"css-选择符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-选择符"}},[t._v("#")]),t._v(" CSS 选择符")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('（1）id选择器（#myid）\n（2）类选择器（.myclassname）\n（3）标签选择器（div,h1,p）\n（4）后代选择器（h1 p）\n（5）相邻后代选择器（子）选择器（ul>li）\n（6）兄弟选择器（li~a）\n（7）相邻兄弟选择器（li+a）\n（8）属性选择器（a[rel="external"]）\n（9）伪类选择器（a:hover,li:nth-child）\n（10）伪元素选择器（::before、::after）\n（11）通配符选择器（*）\n')])])]),s("h2",{attrs:{id:"伪类-lvha"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪类-lvha"}},[t._v("#")]),t._v(" 伪类 LVHA")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("a标签有四种状态：链接访问前、链接访问后、鼠标滑过、激活，分别对应四种伪类:link、:visited、:hover、:active；\n\n当链接未访问过时：\n\n（1）当鼠标滑过a链接时，满足:link和:hover两种状态，要改变a标签的颜色，就必须将:hover伪类在:link伪\n类后面声明；\n（2）当鼠标点击激活a链接时，同时满足:link、:hover、:active三种状态，要显示a标签激活时的样式（:active），\n必须将:active声明放到:link和:hover之后。因此得出LVHA这个顺序。\n\n当链接访问过时，情况基本同上，只不过需要将:link换成:visited。\n\n这个顺序能不能变？可以，但也只有:link和:visited可以交换位置，因为一个链接要么访问过要么没访问过，不可能同时满足，\n也就不存在覆盖的问题。\n\n")])])]),s("h2",{attrs:{id:"c3新增伪类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c3新增伪类"}},[t._v("#")]),t._v(" c3新增伪类")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("（1）elem:nth-child(n)选中父元素下的第n个子元素，并且这个子元素的标签名为elem，n可以接受具体的数值，也可以接受函数。\n\n（2）elem:nth-last-child(n)作用同上，不过是从后开始查找。\n\n（3）elem:last-child选中最后一个子元素。\n\n（4）elem:only-child如果elem是父元素下唯一的子元素，则选中之。\n\n（5）elem:nth-of-type(n)选中父元素下第n个elem类型元素，n可以接受具体的数值，也可以接受函数。\n\n（6）elem:first-of-type选中父元素下第一个elem类型元素。\n\n（7）elem:last-of-type选中父元素下最后一个elem类型元素。\n\n（8）elem:only-of-type如果父元素下的子元素只有一个elem类型元素，则选中该元素。\n\n（9）elem:empty选中不包含子元素和内容的elem类型元素。\n\n（10）elem:target选择当前活动的elem元素。\n\n（11）:not(elem)选择非elem元素的每个元素。\n\n（12）:enabled 控制表单控件的禁用状态。\n\n（13）:disabled\t控制表单控件的禁用状态。\n\n (14):checked单选框或复选框被选中。\n\n")])])]),s("h2",{attrs:{id:"display值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display值"}},[t._v("#")]),t._v(" display值")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("block\t块类型。默认宽度为父元素宽度，可设置宽高，换行显示。\nnone\t元素不显示，并从文档流中移除。\ninline\t行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。\ninline-block 默认宽度为内容宽度，可以设置宽高，同行显示。\nlist-item\t像块类型元素一样显示，并添加样式列表标记。\ntable\t此元素会作为块级表格来显示。\ninherit\t规定应该从父元素继承display属性的值。\n")])])]),s("h2",{attrs:{id:"position-relative-和-absolute-定位原点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#position-relative-和-absolute-定位原点"}},[t._v("#")]),t._v(" position relative 和 absolute 定位原点")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("absolute\n生成绝对定位的元素，相对于值不为static的第一个父元素的padding box进行定位，也可以理解为离自己这一级元素最近的\n一级position设置为absolute或者relative的父元素的padding box的左上角为原点的。\n\nfixed（老IE不支持）\n生成绝对定位的元素，相对于浏览器窗口进行定位。\n\nrelative\n生成相对定位的元素，相对于其元素本身所在正常位置进行定位。\n\nstatic\n默认值。没有定位，元素出现在正常的流中（忽略top,bottom,left,right,z-index声明）。\n\ninherit\n规定从父元素继承position属性的值。\n\nabsolute定位的元素，是相对于它的第一个position值不为static的祖先元素的padding box来进行定位的。\n这句话我们可以这样来理解，我们首先需要找到绝对定位元素的一个position的值不为static的祖先元素，\n然后相对于这个祖先元素的padding box来定位，也就是说在计算定位距离的时候，padding的值也要算进去\n\n")])])]),s("h2",{attrs:{id:"flex布局-容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex布局-容器"}},[t._v("#")]),t._v(" flex布局 容器")]),t._v(" "),s("p",[t._v("可以参考"),s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Flex 布局教程：语法篇》"),s("OutboundLink")],1),s("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-examples.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Flex 布局教程：实例篇》"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"flex-direction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[t._v("#")]),t._v(" flex-direction")]),t._v(" "),s("p",[t._v("决定主轴的方向（即项目的排列方向）")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  row（默认值）：主轴为水平方向，起点在左端。\n  row-reverse：主轴为水平方向，起点在右端。\n  column：主轴为垂直方向，起点在上沿。\n  column-reverse：主轴为垂直方向，起点在下沿\n")])])]),s("h3",{attrs:{id:"flex-wrap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[t._v("#")]),t._v(" flex-wrap")]),t._v(" "),s("p",[t._v("如果一条轴线排不下，如何换行。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap | wrap | wrap-reverse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  nowrap（默认）：不换行\n  wrap：换行，第一行在上方\n  wrap-reverse：换行，第一行在下方\n")])])]),s("h3",{attrs:{id:"flex-flow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[t._v("#")]),t._v(" flex-flow")]),t._v(" "),s("p",[t._v("是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-flow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <flex-direction> || <flex-wrap>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"justify-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[t._v("#")]),t._v(" justify-content")]),t._v(" "),s("p",[t._v("定义了项目在主轴上的对齐方式")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  flex-start（默认值）：左对齐\n  flex-end：右对齐\n  center： 居中\n  space-between：两端对齐，项目之间的间隔都相等。\n  space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\n")])])]),s("h3",{attrs:{id:"align-items"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[t._v("#")]),t._v(" align-items")]),t._v(" "),s("p",[t._v("属性定义项目在交叉轴上如何对齐")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | baseline | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  flex-start：交叉轴的起点对齐。\n  flex-end：交叉轴的终点对齐。\n  center：交叉轴的中点对齐。\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("baseline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 项目的第一行文字的基线对齐。\n  stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\n")])])]),s("h3",{attrs:{id:"align-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[t._v("#")]),t._v(" align-content")]),t._v(" "),s("p",[t._v("属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  flex-start：与交叉轴的起点对齐。\n  flex-end：与交叉轴的终点对齐。\n  center：与交叉轴的中点对齐。\n  space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。\n  space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。\n  stretch（默认值）：轴线占满整个交叉轴。\n")])])]),s("h2",{attrs:{id:"flex布局-项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex布局-项目"}},[t._v("#")]),t._v(" flex布局 项目")]),t._v(" "),s("h3",{attrs:{id:"order"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[t._v("#")]),t._v(" order")]),t._v(" "),s("p",[t._v("定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <integer>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"flex-grow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[t._v("#")]),t._v(" flex-grow")]),t._v(" "),s("p",[t._v("定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 0 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，\n  其他项目都为1，则前者占据的剩余空间将比其他项多一倍。\n")])])]),s("h3",{attrs:{id:"flex-shrink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[t._v("#")]),t._v(" flex-shrink")]),t._v(" "),s("p",[t._v("定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default 1 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，\n  其他项目都为1，则空间不足时，前者不缩小。\n")])])]),s("h3",{attrs:{id:"flex-basis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[t._v("#")]),t._v(" flex-basis")]),t._v(" "),s("p",[t._v("定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <length> | auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* default auto */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。\n")])])]),s("h3",{attrs:{id:"flex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" flex")]),t._v(" "),s("p",[t._v("flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none | [ <"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-grow'")]),t._v("> <"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-shrink'")]),t._v(">? || <"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-basis'")]),t._v("> ]\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  该属性有两个快捷值：auto "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("1 1 auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 和 none "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0 0 auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n  建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。\n")])])]),s("h3",{attrs:{id:"align-self"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[t._v("#")]),t._v(" align-self")]),t._v(" "),s("p",[t._v("align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto | flex-start | flex-end | center | baseline | stretch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  flex-start：交叉轴的起点对齐。\n  flex-end：交叉轴的终点对齐。\n  center：交叉轴的中点对齐。\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("baseline")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 项目的第一行文字的基线对齐。\n  stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);